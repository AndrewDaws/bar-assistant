<?php

namespace Kami\Cocktail\Console\Commands;

use Illuminate\Console\Command;
use Laravel\Scout\EngineManager;
use Illuminate\Support\Facades\DB;
use Illuminate\Support\Facades\App;
use Illuminate\Support\Facades\Cache;

class SetupMeilisearch extends Command
{
    /**
     * The name and signature of the console command.
     *
     * @var string
     */
    protected $signature = 'bar:setup-meilisearch';

    /**
     * The console command description.
     *
     * @var string
     */
    protected $description = 'Using master key is not recommended for API calls. This command will generate a new scoped API key and update the ENV file.';

    /**
     * Execute the console command.
     */
    public function handle(): int
    {
        if (config('scout.driver') !== 'meilisearch') {
            $this->error('Search driver is not set to "meilisearch". Skipping.');
            return Command::INVALID;
        }

        $this->line('Setting up Meilisearch client keys...');
        /** @var \Meilisearch\Client */
        $meilisearch = resolve(EngineManager::class)->engine();

        $searchApiKey = null;
        $keys = $meilisearch->getKeys();
        /** @var \Meilisearch\Endpoints\Keys */
        foreach ($keys->getResults() as $key) {
            if ($key->getName() === 'bar-assistant') {
                $searchApiKey = $key;
            }
        }

        if (!$searchApiKey) {
            $searchApiKey = $meilisearch->createKey([
                'actions' => ['search'],
                'indexes' => ['cocktails', 'ingredients'],
                'expiresAt' => null,
                'name' => 'bar-assistant',
                'description' => 'Client key generated by Bar Assistant v3 Server. Key for accessing cocktails and ingredients indexes.'
            ]);
        }

        $this->line('Clearing existing search tokens from bars...');
        DB::table('bars')->update(['search_token' => null]);

        Cache::flush();

        $this->line('Updating ENV...');

        $envFile = App::environmentFilePath();
        $envContents = file_get_contents($envFile);

        // Update existing variables
        if (str_contains($envContents, 'MEILISEARCH_API_KEY=')) {
            file_put_contents($envFile, str_replace(
                'MEILISEARCH_API_KEY=' . config('scout.meilisearch.api_key'),
                'MEILISEARCH_API_KEY=' . $searchApiKey->getKey(),
                $envContents
            ));
        } else {
            file_put_contents($envFile, $envContents . PHP_EOL . 'MEILISEARCH_API_KEY=' . $searchApiKey->getKey());
        }

        $envContents = file_get_contents($envFile);

        if (str_contains($envContents, 'MEILISEARCH_API_KEY_UID=')) {
            file_put_contents($envFile, str_replace(
                'MEILISEARCH_API_KEY_UID=' . config('scout.meilisearch.api_key_uid'),
                'MEILISEARCH_API_KEY_UID=' . $searchApiKey->getUid(),
                $envContents
            ));
        } else {
            file_put_contents($envFile, $envContents . PHP_EOL . 'MEILISEARCH_API_KEY_UID=' . $searchApiKey->getUid());
        }

        $this->info('Meilisearch setup done!');

        return Command::SUCCESS;
    }
}
